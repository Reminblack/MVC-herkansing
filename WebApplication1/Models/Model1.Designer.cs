//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("StudentModels", "groupAssignStudent", "groupAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcApplication1.Models.groupAssign), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MvcApplication1.Models.Student), true)]
[assembly: EdmRelationshipAttribute("StudentModels", "groupAssignGroup", "groupAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcApplication1.Models.groupAssign), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MvcApplication1.Models.Group), true)]
[assembly: EdmRelationshipAttribute("StudentModels", "UsersStudent", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MvcApplication1.Models.Users), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcApplication1.Models.Student), true)]
[assembly: EdmRelationshipAttribute("StudentModels", "UsersGroup", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MvcApplication1.Models.Users), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcApplication1.Models.Group), true)]

#endregion

namespace MvcApplication1.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Database1Entities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Database1Entities1 object using the connection string found in the 'Database1Entities1' section of the application configuration file.
        /// </summary>
        public Database1Entities1() : base("name=Database1Entities1", "Database1Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Database1Entities1 object.
        /// </summary>
        public Database1Entities1(string connectionString) : base(connectionString, "Database1Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Database1Entities1 object.
        /// </summary>
        public Database1Entities1(EntityConnection connection) : base(connection, "Database1Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Student
        {
            get
            {
                if ((_Student == null))
                {
                    _Student = base.CreateObjectSet<Student>("Student");
                }
                return _Student;
            }
        }
        private ObjectSet<Student> _Student;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> GroupSet
        {
            get
            {
                if ((_GroupSet == null))
                {
                    _GroupSet = base.CreateObjectSet<Group>("GroupSet");
                }
                return _GroupSet;
            }
        }
        private ObjectSet<Group> _GroupSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<groupAssign> groupAssignSet
        {
            get
            {
                if ((_groupAssignSet == null))
                {
                    _groupAssignSet = base.CreateObjectSet<groupAssign>("groupAssignSet");
                }
                return _groupAssignSet;
            }
        }
        private ObjectSet<groupAssign> _groupAssignSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> UsersSet
        {
            get
            {
                if ((_UsersSet == null))
                {
                    _UsersSet = base.CreateObjectSet<Users>("UsersSet");
                }
                return _UsersSet;
            }
        }
        private ObjectSet<Users> _UsersSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Student EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudent(Student student)
        {
            base.AddObject("Student", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupSet(Group group)
        {
            base.AddObject("GroupSet", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the groupAssignSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogroupAssignSet(groupAssign groupAssign)
        {
            base.AddObject("groupAssignSet", groupAssign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersSet(Users users)
        {
            base.AddObject("UsersSet", users);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StudentModels", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupId">Initial value of the groupId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="usersId">Initial value of the UsersId property.</param>
        public static Group CreateGroup(global::System.Int32 groupId, global::System.String name, global::System.Int32 usersId)
        {
            Group group = new Group();
            group.groupId = groupId;
            group.name = name;
            group.UsersId = usersId;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 groupId
        {
            get
            {
                return _groupId;
            }
            set
            {
                if (_groupId != value)
                {
                    OngroupIdChanging(value);
                    ReportPropertyChanging("groupId");
                    _groupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("groupId");
                    OngroupIdChanged();
                }
            }
        }
        private global::System.Int32 _groupId;
        partial void OngroupIdChanging(global::System.Int32 value);
        partial void OngroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsersId
        {
            get
            {
                return _UsersId;
            }
            set
            {
                OnUsersIdChanging(value);
                ReportPropertyChanging("UsersId");
                _UsersId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsersId");
                OnUsersIdChanged();
            }
        }
        private global::System.Int32 _UsersId;
        partial void OnUsersIdChanging(global::System.Int32 value);
        partial void OnUsersIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StudentModels", "groupAssignGroup", "groupAssign")]
        public EntityCollection<groupAssign> groupAssign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<groupAssign>("StudentModels.groupAssignGroup", "groupAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<groupAssign>("StudentModels.groupAssignGroup", "groupAssign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StudentModels", "UsersGroup", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("StudentModels.UsersGroup", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("StudentModels.UsersGroup", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("StudentModels.UsersGroup", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("StudentModels.UsersGroup", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StudentModels", Name="groupAssign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class groupAssign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new groupAssign object.
        /// </summary>
        /// <param name="studentStudent_id">Initial value of the StudentStudent_id property.</param>
        /// <param name="group_groupId">Initial value of the Group_groupId property.</param>
        public static groupAssign CreategroupAssign(global::System.Int32 studentStudent_id, global::System.Int32 group_groupId)
        {
            groupAssign groupAssign = new groupAssign();
            groupAssign.StudentStudent_id = studentStudent_id;
            groupAssign.Group_groupId = group_groupId;
            return groupAssign;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentStudent_id
        {
            get
            {
                return _StudentStudent_id;
            }
            set
            {
                if (_StudentStudent_id != value)
                {
                    OnStudentStudent_idChanging(value);
                    ReportPropertyChanging("StudentStudent_id");
                    _StudentStudent_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentStudent_id");
                    OnStudentStudent_idChanged();
                }
            }
        }
        private global::System.Int32 _StudentStudent_id;
        partial void OnStudentStudent_idChanging(global::System.Int32 value);
        partial void OnStudentStudent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Group_groupId
        {
            get
            {
                return _Group_groupId;
            }
            set
            {
                if (_Group_groupId != value)
                {
                    OnGroup_groupIdChanging(value);
                    ReportPropertyChanging("Group_groupId");
                    _Group_groupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Group_groupId");
                    OnGroup_groupIdChanged();
                }
            }
        }
        private global::System.Int32 _Group_groupId;
        partial void OnGroup_groupIdChanging(global::System.Int32 value);
        partial void OnGroup_groupIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StudentModels", "groupAssignStudent", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("StudentModels.groupAssignStudent", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("StudentModels.groupAssignStudent", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("StudentModels.groupAssignStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("StudentModels.groupAssignStudent", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StudentModels", "groupAssignGroup", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("StudentModels.groupAssignGroup", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("StudentModels.groupAssignGroup", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("StudentModels.groupAssignGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("StudentModels.groupAssignGroup", "Group", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StudentModels", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="student_id">Initial value of the Student_id property.</param>
        /// <param name="student_Name">Initial value of the Student_Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="student_surname">Initial value of the Student_surname property.</param>
        /// <param name="aanhef">Initial value of the aanhef property.</param>
        /// <param name="usersId">Initial value of the UsersId property.</param>
        public static Student CreateStudent(global::System.Int32 student_id, global::System.String student_Name, global::System.String email, global::System.String student_surname, global::System.String aanhef, global::System.Int32 usersId)
        {
            Student student = new Student();
            student.Student_id = student_id;
            student.Student_Name = student_Name;
            student.Email = email;
            student.Student_surname = student_surname;
            student.aanhef = aanhef;
            student.UsersId = usersId;
            return student;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Student_id
        {
            get
            {
                return _Student_id;
            }
            set
            {
                if (_Student_id != value)
                {
                    OnStudent_idChanging(value);
                    ReportPropertyChanging("Student_id");
                    _Student_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Student_id");
                    OnStudent_idChanged();
                }
            }
        }
        private global::System.Int32 _Student_id;
        partial void OnStudent_idChanging(global::System.Int32 value);
        partial void OnStudent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Student_Name
        {
            get
            {
                return _Student_Name;
            }
            set
            {
                OnStudent_NameChanging(value);
                ReportPropertyChanging("Student_Name");
                _Student_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Student_Name");
                OnStudent_NameChanged();
            }
        }
        private global::System.String _Student_Name;
        partial void OnStudent_NameChanging(global::System.String value);
        partial void OnStudent_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Student_surname
        {
            get
            {
                return _Student_surname;
            }
            set
            {
                OnStudent_surnameChanging(value);
                ReportPropertyChanging("Student_surname");
                _Student_surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Student_surname");
                OnStudent_surnameChanged();
            }
        }
        private global::System.String _Student_surname;
        partial void OnStudent_surnameChanging(global::System.String value);
        partial void OnStudent_surnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String aanhef
        {
            get
            {
                return _aanhef;
            }
            set
            {
                OnaanhefChanging(value);
                ReportPropertyChanging("aanhef");
                _aanhef = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("aanhef");
                OnaanhefChanged();
            }
        }
        private global::System.String _aanhef;
        partial void OnaanhefChanging(global::System.String value);
        partial void OnaanhefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsersId
        {
            get
            {
                return _UsersId;
            }
            set
            {
                OnUsersIdChanging(value);
                ReportPropertyChanging("UsersId");
                _UsersId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsersId");
                OnUsersIdChanged();
            }
        }
        private global::System.Int32 _UsersId;
        partial void OnUsersIdChanging(global::System.Int32 value);
        partial void OnUsersIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StudentModels", "groupAssignStudent", "groupAssign")]
        public EntityCollection<groupAssign> groupAssign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<groupAssign>("StudentModels.groupAssignStudent", "groupAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<groupAssign>("StudentModels.groupAssignStudent", "groupAssign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StudentModels", "UsersStudent", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("StudentModels.UsersStudent", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("StudentModels.UsersStudent", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("StudentModels.UsersStudent", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("StudentModels.UsersStudent", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StudentModels", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="password">Initial value of the password property.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String username, global::System.String password)
        {
            Users users = new Users();
            users.Id = id;
            users.username = username;
            users.password = password;
            return users;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StudentModels", "UsersStudent", "Student")]
        public EntityCollection<Student> Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("StudentModels.UsersStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("StudentModels.UsersStudent", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StudentModels", "UsersGroup", "Group")]
        public EntityCollection<Group> Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("StudentModels.UsersGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("StudentModels.UsersGroup", "Group", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
